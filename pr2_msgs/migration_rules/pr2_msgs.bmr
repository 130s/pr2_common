class update_robot_msgs_BatteryState_4ff25d113599e41722c1a5b463719a2c(MessageUpdateRule):
	old_type = "robot_msgs/BatteryState"
	old_full_text = """
Header header
float64 energy_remaining ## Joules
float64 energy_capacity ## Joules
float64 power_consumption ## Watts

================================================================================
MSG: roslib/Header
#Standard metadata for higher-level flow data types
#sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.secs: seconds (stamp_secs) since epoch
# * stamp.nsecs: nanoseconds since stamp_secs
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id
"""

	new_type = "pr2_msgs/BatteryState"
	new_full_text = """
Header header
float64 energy_remaining ## Joules
float64 energy_capacity ## Joules
float64 power_consumption ## Watts

================================================================================
MSG: roslib/Header
#Standard metadata for higher-level flow data types
#sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.secs: seconds (stamp_secs) since epoch
# * stamp.nsecs: nanoseconds since stamp_secs
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id
"""

	order = 0
	migrated_types = [
		("Header","Header"),]

	valid = True

	def update(self, old_msg, new_msg):
		self.migrate(old_msg.header, new_msg.header)
		new_msg.energy_remaining = old_msg.energy_remaining
		new_msg.energy_capacity = old_msg.energy_capacity
		new_msg.power_consumption = old_msg.power_consumption

class update_pr2_mechanism_controllers_LaserScannerSignal_78f41e618127bce049dd6104d9c31dc5(MessageUpdateRule):
	old_type = "pr2_mechanism_controllers/LaserScannerSignal"
	old_full_text = """
Header header

# signal == 0 => Half profile complete
# signal == 1 => Full Profile Complete
int32 signal

================================================================================
MSG: roslib/Header
#Standard metadata for higher-level flow data types
#sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.secs: seconds (stamp_secs) since epoch
# * stamp.nsecs: nanoseconds since stamp_secs
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id
"""

	new_type = "pr2_msgs/LaserScannerSignal"
	new_full_text = """
Header header

# signal == 0 => Half profile complete
# signal == 1 => Full Profile Complete
int32 signal

================================================================================
MSG: roslib/Header
#Standard metadata for higher-level flow data types
#sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.secs: seconds (stamp_secs) since epoch
# * stamp.nsecs: nanoseconds since stamp_secs
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id
"""

	order = 0
	migrated_types = [
		("Header","Header"),]

	valid = True

	def update(self, old_msg, new_msg):
		self.migrate(old_msg.header, new_msg.header)
		new_msg.signal = old_msg.signal

