<?xml version="1.0"?>

<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface">

  <property name="M_PI" value="3.1415926535897931" />

  <macro name="pr2_tilting_laser_gazebo" params="name">

    <gazebo reference="${name}_mount_link">
      <material value="PR2/Red" />
    </gazebo>
    <gazebo reference="${name}_link">
      <sensor:ray name="${name}">
        <rayCount>640</rayCount>
        <rangeCount>640</rangeCount>
        <laserCount>1</laserCount>

        <origin>0.0 0.0 0.0</origin>
        <displayRays>false</displayRays>

        <minAngle>-80</minAngle>
        <maxAngle> 80</maxAngle>

        <minRange>0.05</minRange>
        <maxRange>10.0</maxRange>
        <resRange>0.01</resRange>
        <updateRate>20.0</updateRate>
        <controller:ros_laser name="ros_${name}_controller" plugin="libros_laser.so">
          <gaussianNoise>0.005</gaussianNoise>
          <alwaysOn>true</alwaysOn>
          <updateRate>20.0</updateRate>
          <topicName>tilt_scan</topicName>
          <frameName>${name}_link</frameName>
          <interface:laser name="ros_${name}_iface" />
        </controller:ros_laser>
      </sensor:ray>
    </gazebo>

  </macro>

  <!-- Made by Kevin for A2 sensor package -->
  <!-- Origin is center mount screw on sensor plate mount -->
  <!-- When mounted properly, should have same origin as head plate frame -->
  <macro name="pr2_head_sensor_package_gazebo" params="name">
    <gazebo reference="${name}_sensor_link">
      <material value="PR2/Blue" />
    </gazebo>
  </macro>

  <!-- Made by Kevin for double stereo camera for PR-2 Beta. -->
  <!-- Needs calibration verification, and CAD check. -->
  <macro name="double_stereo_camera_gazebo" params="name">
    <!-- Define link to stereo cameras, set origin relative to that -->
    <gazebo reference="${name}_double_stereo_link">
      <material value="PR2/Blue" />
    </gazebo>
  </macro>

  <macro name="stereo_camera_gazebo" params="name">
    
    <gazebo reference="${name}_link">
      <material value="PR2/Blue" />
    </gazebo>

    <gazebo reference="${name}_optical_frame">
      <material value="PR2/Blue" />
    </gazebo>

    <gazebo reference="${name}_l_stereo_camera_frame">
      <sensor:camera name="${name}_l_sensor">
        <imageSize>640 480</imageSize>
        <imageFormat>L8</imageFormat>
        <hfov>90</hfov>
        <nearClip>0.1</nearClip>
        <farClip>100</farClip>
        <updateRate>20.0</updateRate>
        <controller:ros_camera name="${name}_l_controller" plugin="libros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>20.0</updateRate>
          <topicName>${name}/left_image</topicName>
          <frameName>${name}_l_stereo_camera_frame</frameName>
          <interface:camera name="${name}_l_iface" />
        </controller:ros_camera>
      </sensor:camera>
      <material value="PR2/Blue" />
    </gazebo>

    <gazebo reference="${name}_r_stereo_camera_frame">
      <sensor:camera name="${name}_r_sensor">
        <imageSize>640 480</imageSize>
        <imageFormat>L8</imageFormat>
        <hfov>90</hfov>
        <nearClip>0.1</nearClip>
        <farClip>100</farClip>
        <updateRate>20.0</updateRate>
        <controller:ros_camera name="${name}_r_controller" plugin="libros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>20.0</updateRate>
          <topicName>${name}/right_image</topicName>
          <frameName>${name}_r_stereo_camera_frame</frameName>
          <interface:camera name="${name}_r_iface" />
        </controller:ros_camera>
      </sensor:camera>
      <material value="PR2/Blue" />
    </gazebo>


    <!-- stereo plugin that produces a raw_stereo message -->
    <gazebo> <!-- this is not attached to any link!!!, there no reference -->
      <controller:ros_stereo_camera name="${name}_controller" plugin="libros_stereo_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>20.0</updateRate>
        <leftCamera>${name}_l_sensor</leftCamera>
        <rightCamera>${name}_r_sensor</rightCamera>
        <topicName>${name}/raw_stereo</topicName>
        <frameName>${name}_optical_frame</frameName>
        <CxPrime>320</CxPrime>
        <Cx>320</Cx>
        <Cy>240</Cy>
        <focal_length>320</focal_length> <!-- image_width / (2*tan(hfov_radian /2)) -->
        <distortion_k1>0</distortion_k1>
        <distortion_k2>0</distortion_k2>
        <distortion_k3>0</distortion_k3>
        <distortion_t1>0</distortion_t1>
        <distortion_t2>0</distortion_t2>
        <baseline>${stereo_dy}</baseline> <!-- home pos. of robot has +x forward, +y left -->
        <interface:stereocamera name="${name}_iface" />
      </controller:ros_stereo_camera>
    </gazebo>

  </macro>

  <macro name="stereo_camera_gazebo_wide" params="name">
    
    <gazebo reference="${name}_link">
      <material value="PR2/Blue" />
    </gazebo>

    <gazebo reference="${name}_optical_frame">
      <material value="PR2/Blue" />
    </gazebo>

    <gazebo reference="${name}_l_stereo_camera_frame">
      <sensor:camera name="${name}_l_sensor">
        <imageSize>640 480</imageSize>
        <imageFormat>L8</imageFormat>
        <hfov>90</hfov>
        <nearClip>0.1</nearClip>
        <farClip>100</farClip>
        <updateRate>20.0</updateRate>
        <controller:ros_camera name="${name}_l_controller" plugin="libros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>20.0</updateRate>
          <topicName>${name}/left_image</topicName>
          <frameName>${name}_l_stereo_camera_frame</frameName>
          <interface:camera name="${name}_l_iface" />
        </controller:ros_camera>
      </sensor:camera>
      <material value="PR2/Blue" />
    </gazebo>

    <gazebo reference="${name}_r_stereo_camera_frame">
      <sensor:camera name="${name}_r_sensor">
        <imageSize>640 480</imageSize>
        <imageFormat>L8</imageFormat>
        <hfov>90</hfov>
        <nearClip>0.1</nearClip>
        <farClip>100</farClip>
        <updateRate>20.0</updateRate>
        <controller:ros_camera name="${name}_r_controller" plugin="libros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>20.0</updateRate>
          <topicName>${name}/right_image</topicName>
          <frameName>${name}_r_stereo_camera_frame</frameName>
          <interface:camera name="${name}_r_iface" />
        </controller:ros_camera>
      </sensor:camera>
      <material value="PR2/Blue" />
    </gazebo>


    <!-- stereo plugin that produces a raw_stereo message -->
    <gazebo> <!-- this is not attached to any link!!!, there no reference -->
      <controller:ros_stereo_camera name="${name}_controller" plugin="libros_stereo_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>20.0</updateRate>
        <leftCamera>${name}_l_sensor</leftCamera>
        <rightCamera>${name}_r_sensor</rightCamera>
        <topicName>${name}/raw_stereo</topicName>
        <frameName>${name}_optical_frame</frameName>
        <CxPrime>320</CxPrime>
        <Cx>320</Cx>
        <Cy>240</Cy>
        <focal_length>320</focal_length> <!-- image_width / (2*tan(hfov_radian /2)) -->
        <distortion_k1>0</distortion_k1>
        <distortion_k2>0</distortion_k2>
        <distortion_k3>0</distortion_k3>
        <distortion_t1>0</distortion_t1>
        <distortion_t2>0</distortion_t2>
        <baseline>${stereo_dy}</baseline> <!-- home pos. of robot has +x forward, +y left -->
        <interface:stereocamera name="${name}_iface" />
      </controller:ros_stereo_camera>
    </gazebo>

  </macro>

  <macro name="stereo_camera_gazebo_narrow" params="name">
    
    <gazebo reference="${name}_link">
      <material value="PR2/Blue" />
    </gazebo>

    <gazebo reference="${name}_optical_frame">
      <material value="PR2/Blue" />
    </gazebo>

    <gazebo reference="${name}_l_stereo_camera_frame">
      <sensor:camera name="${name}_l_sensor">
        <imageSize>640 480</imageSize>
        <imageFormat>L8</imageFormat>
        <hfov>45</hfov>
        <nearClip>0.1</nearClip>
        <farClip>100</farClip>
        <updateRate>20.0</updateRate>
        <controller:ros_camera name="${name}_l_controller" plugin="libros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>20.0</updateRate>
          <topicName>${name}/left_image</topicName>
          <frameName>${name}_l_stereo_camera_frame</frameName>
          <interface:camera name="${name}_l_iface" />
        </controller:ros_camera>
      </sensor:camera>
      <material value="PR2/Blue" />
    </gazebo>

    <gazebo reference="${name}_r_stereo_camera_frame">
      <sensor:camera name="${name}_r_sensor">
        <imageSize>640 480</imageSize>
        <imageFormat>L8</imageFormat>
        <hfov>90</hfov>
        <nearClip>0.1</nearClip>
        <farClip>100</farClip>
        <updateRate>20.0</updateRate>
        <controller:ros_camera name="${name}_r_controller" plugin="libros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>20.0</updateRate>
          <topicName>${name}/right_image</topicName>
          <frameName>${name}_r_stereo_camera_frame</frameName>
          <interface:camera name="${name}_r_iface" />
        </controller:ros_camera>
      </sensor:camera>
      <material value="PR2/Blue" />
    </gazebo>


    <!-- stereo plugin that produces a raw_stereo message -->
    <gazebo> <!-- this is not attached to any link!!!, there no reference -->
      <controller:ros_stereo_camera name="${name}_controller" plugin="libros_stereo_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>20.0</updateRate>
        <leftCamera>${name}_l_sensor</leftCamera>
        <rightCamera>${name}_r_sensor</rightCamera>
        <topicName>${name}/raw_stereo</topicName>
        <frameName>${name}_optical_frame</frameName>
        <CxPrime>320</CxPrime>
        <Cx>320</Cx>
        <Cy>240</Cy>
        <focal_length>320</focal_length> <!-- image_width / (2*tan(hfov_radian /2)) -->
        <distortion_k1>0</distortion_k1>
        <distortion_k2>0</distortion_k2>
        <distortion_k3>0</distortion_k3>
        <distortion_t1>0</distortion_t1>
        <distortion_t2>0</distortion_t2>
        <baseline>${stereo_dy}</baseline> <!-- home pos. of robot has +x forward, +y left -->
        <interface:stereocamera name="${name}_iface" />
      </controller:ros_stereo_camera>
    </gazebo>

  </macro>


</robot>
